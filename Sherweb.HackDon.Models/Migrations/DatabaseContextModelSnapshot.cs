// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Sherweb.HackDon.Models;
using System;

namespace Sherweb.HackDon.Models.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("IconUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ExternalProjectUrl");

                    b.Property<Guid>("OSBLId");

                    b.Property<string>("ProjectImageUrl");

                    b.Property<Guid>("SubCategoryId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OSBLId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Causes");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.OSBL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ExternalOSBLUrl");

                    b.Property<string>("OSBLLogoUrl");

                    b.Property<string>("OSBLName");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("OSBLs");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("IconUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("IconUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Age");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.UserCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCategories");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.UserSubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("SubCategoryId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubCategories");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.VotedCause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CauseId");

                    b.Property<bool>("LikedIt");

                    b.Property<double>("Ratio");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("UserId");

                    b.ToTable("VotedCauses");
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Cause", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.OSBL", "OSBL")
                        .WithMany()
                        .HasForeignKey("OSBLId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sherweb.HackDon.Models.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.SubCategory", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.Subscription", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.UserCategory", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sherweb.HackDon.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.UserSubCategory", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sherweb.HackDon.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Sherweb.HackDon.Models.Entities.VotedCause", b =>
                {
                    b.HasOne("Sherweb.HackDon.Models.Entities.Cause", "Cause")
                        .WithMany()
                        .HasForeignKey("CauseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sherweb.HackDon.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
